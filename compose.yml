services:
  caddy:
    # Use custom dockerfile to build with required dns module
    build: ./caddy
    container_name: caddy
    depends_on:
      - jellyfin
    environment:
      - CF_API_TOKEN
      - CF_ZONE_TOKEN
    volumes:
      - ./volumes/caddy/conf:/etc/caddy
      - ./volumes/caddy/site:/srv
      - ./volumes/caddy/caddy_data:/data
      - ./volumes/caddy/caddy_config:/config
    ports:
      - ${CLIENT_IP}:80:80/tcp
      - ${CLIENT_IP}:443:443/tcp
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    # GPU passthrough: device
    devices:
      - /dev/dri:/dev/dri
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${TZ}
      JELLYFIN_PublishedServerUrl: ${PUBLISHED_SERVER_URL}
      # Intel ARC GPU opencl
      DOCKER_MODS: linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - ./volumes/jellyfin/config:/config
      # NFS share to media, hosted on NAS. See README.md for setup instructions.
      - /mnt/nas-media/movies:/data/movies:ro
      - /mnt/nas-media/shows:/data/shows:ro
      - /mnt/nas-music:/data/music:ro
    ports:
      # https://jellyfin.org/docs/general/networking/
      # - 8096:8096 # http web ui
      # - 8920:8920 # https web ui
      - ${CLIENT_IP}:7359:7359/udp # client discovery
      - ${CLIENT_IP}:1900:1900/udp # service discovery
    restart: unless-stopped

  # nginx:
  #   image: lscr.io/linuxserver/nginx:latest
  #   container_name: jellyfin-reverse-proxy
  #   depends_on:
  #     - jellyfin
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TZ}
  #   volumes:
  #     - ./volumes/nginx/config:/config
  #   ports:
  #     - ${CLIENT_IP}:443:443/tcp
  #   restart: unless-stopped

  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: watchtower
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=3600
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: jellyfin nginx
  #   restart: unless-stopped
